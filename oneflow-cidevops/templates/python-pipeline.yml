include:
  - project: 'platform/ecoflow-cidevops'
    ref: master
    file: 'templates/default-pipeline.yml'

variables:
  ## 全局配置
  GIT_CHECKOUT: "false"

  ## 作业控制
  RUN_PIPELINE_BUILD:   "yes"     #是否运行构建 yes/no
  RUN_PIPELINE_TEST:    "yes"     #是否运行测试 yes/no
  RUN_CODE_ANALYSIS:    "yes"     #是否代码扫描 yes/no
  RUN_BUILD_IMAGE:      "yes"     #是否生成镜像 yes/no
  RUN_PUBLIC_DOC:       "yes"     #是否发布api文档 yes/no
  RUN_DEPLOY_K8S:       "yes"     #是否发布K8S yes/no
  UPGRADE_IMAGE_K8S:    "yes"     #是否更新K8S镜像 yes/no
  RUN_ROT_NOTICE:       "no"     #是否通知 yes/no
  FEI_SHU_ROBOT_NOTICE: "yes"      #是否飞书机器通知 yes/no
  ROBOT_KEY: '91f683df-6c2c-42c5-b6b3-27a4a51107f1' #飞书机器人key

  ## 构建测试参数
  BUILD_SHELL: 'pip install requirements.txt'   #构建命令

  ## 单元测试参数
  TEST_SHELL : ''       #测试命令
  JUNIT_REPORT_PATH: ''     #单元测试报告


  ## 构建镜像
  IMAGE_NAME: "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"     #镜像名称
  DOCKER_FILE_PATH: "./Dockerfile"                                                  #Dockerfile位置
  DEPLOY_IMAGE: "harbor.ecoflow.com/idc-devops/kubectl-idc-bpit-test:bpit-release"  #打包docker 镜像

  ## 部署应用k8s
  APP_NAME: "$CI_PROJECT_NAME"                                                  #应用名称 <--> deploymentName
  CONTAINER_PORT: "8081"                                                        #服务端口 <--> servicesPort
  NAMESPACE: ""                                                                 #名称空间
  NODE_IP_PORT: ""                                                              # 节点IP +端口
  ENV_URL: "${NAMESPACE}.${CI_PROJECT_NAME}.${NODE_IP_PORT}"  #IngressHosts

build:
  extends: .build
  tags:
    - k8s-deploy
  artifacts:
    paths:
      - ./
